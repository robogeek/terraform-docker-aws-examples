provider "aws" {
    profile   = var.aws_profile
    region    = var.aws_region
}

terraform {
  backend "local" {
    path = "../state/vpc/terraform.tfstate"
  }
}

data "aws_availability_zones" "available" {
    state = "available"
}

locals {
    config = var.configuration[var.env_name]
}

module "vpc-example" {
    source = "terraform-aws-modules/vpc/aws"

    name       = "${var.project_name}-${var.env_name}-vpc"
    cidr       = local.config.vpc_cidr

    enable_nat_gateway     = local.config.enable_nat_gateway
    single_nat_gateway     = local.config.single_nat_gateway
    one_nat_gateway_per_az = local.config.one_nat_gateway_per_az
    create_igw             = local.config.create_igw
    enable_dns_support     = local.config.enable_dns_support
    enable_dns_hostnames   = local.config.enable_dns_hostnames

    azs             = data.aws_availability_zones.available.names
    public_subnets  = local.config.public_subnet_cidrs
    private_subnets = local.config.private_subnet_cidrs

    enable_dhcp_options              = true
    dhcp_options_domain_name_servers = ["127.0.0.1", "10.10.0.2"]
    
    # VPC endpoint for ECS
    # enable_ecs_endpoint              = true
    # ecs_endpoint_private_dns_enabled = true
    # ecs_endpoint_security_group_ids  = [data.aws_security_group.default.id]

    # Default security group - ingress/egress rules cleared to deny all
    /* manage_default_security_group  = true
    default_security_group_ingress = [
        {
            protocol        = "tcp"
            from_port       = 0
            to_port         = "80"
            cidr_blocks     =  "0.0.0.0/0" 
        },
        {
            protocol        = "tcp"
            from_port       = 0
            to_port         = "443"
            cidr_blocks     =  "0.0.0.0/0" 
        } /*,
        {
            protocol        = "tcp"
            from_port       = 0
            to_port         = "22"
            cidr_blocks     = [ "0.0.0.0/0" ]
        } * /
    ]
    default_security_group_egress  = [
        {
            protocol    = "-1"
            from_port   = 0
            to_port     = 0
            cidr_blocks = "0.0.0.0/0"
        }
    ] */
}


data "aws_security_group" "default" {
    name   = "default"
    vpc_id = module.vpc-example.vpc_id
}

